<div class="popup-background" onclick="@ClosePopup" style="visibility: @Visible; background-color: @PopupBgColor">
</div>
<div class="popup-container" style="height: @(PopupHeight)%; visibility: @Visible;">
	<div class="popup-topbar">
		<h3>@PopupTitle</h3>
		<MudIconButton Class="close-button" OnClick="ClosePopup" Icon="@Icons.Material.Outlined.Cancel" />
	</div>
	<div class="divider"></div>
	@ChildContent
	@* <MudButton OnClick="@HandleSubmit" Disabled="@ButtonDisabled" Class="primary-button">@PopupButtonText</MudButton> *@
</div>

@code {
	[Parameter] public RenderFragment? ChildContent { get; set; }
	[Parameter] public bool isShown { get; set; }
	[Parameter] public int PopupHeight { get; set; } = 0;
	[Parameter] public string? PopupTitle { get; set; }
	[Parameter] public string PopupBgColor { get; set; } = "rgba(31, 31, 31, 0)";
	[Parameter] public string Visible { get; set; } = "hidden";
	[Parameter] public string PopupButtonText { get; set; } = "Bevestigen";
	[Parameter] public EventCallback HandleSubmit { get; set; }
	[Parameter] public EventCallback ClosePopup { get; set; }
	[Parameter] public EventCallback OnClose { get; set; }
	[Parameter] public decimal? WithdrawAmount { get; set; }

	protected override void OnInitialized()
	{

	}
}
